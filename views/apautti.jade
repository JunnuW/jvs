extends layout

block content
  h1 This site applies cloud downloadable software running locally on your browser
  p
    h3(style="color:green") Advantage potential in this concept:
    b  Consider at least the following benefits:
    br
    |  -  Ease of softwre distribution and deployment,
    br
    |  -  Minimal assembly effort on user's equipment,
    br
    |  -  Using a standard web browser, the user can stick to any OS (Win, Linux, OS X, Android, ...)
    br
    |     and hardware (pc, laptop, tablet or phone),
    br
    |  -  Application support and maintenance efforts are greatly simplified,
    br
    |   since only one software version (this one) needs to be supported and updated.
    h3(style="color:green") Application structure:
    | Two separately developed and debugged components are needed; one for the server and another for the user's browser.
    | Interactions between these two take place through server responses to requests from the user's web browser.
    h4 Server side program:
    | Server software is normally located on a remote machine, but for offline access and program development purposes it can
    | as well be assembled on the local machine. In that case, 'local host' stores all the required HTML pages and resources.
    br
    | After processing the requests coming from client's browser, the server sends back responses with dynamic content.
    | Programs on the server machine are based on a specific web-framework system, the developer chose before beginning
    | the development process. Several alternatives are available for the web-framework.
    br
    u Some popular options:
    br
    - var Django_url="https://en.wikipedia.org/wiki/Django_(web_framework)"
    a(href=Django_url target="_blank")  - Django
    |   (Open source web application network written in Python)
    br
    -var Ruby_url="https://en.wikipedia.org/wiki/Ruby_on_Rails"
    a(href=Ruby_url target="_blank")  - Ruby on Rails (RoR)
    |   (MIT licenced application network written in Ruby)
    br
    -var Symphony_url="https://en.wikipedia.org/wiki/Symfony"
    a(href=Symphony_url target="_blank")  - Symphony
    |   (Open source web application network under MIT licence for PHP language)
    br
    -var Spring_url="https://en.wikipedia.org/wiki/Spring_Framework"
    a(href=Spring_url target="_blank")  - Spring framework
    |   (Apache licenced application framework for Java platform)
    br
    -var Asp_url="https://en.wikipedia.org/wiki/ASP.NET"
    a(href=Asp_url target="_blank")  - ASP.NET
    |   (open source, server-side web application framework running on Microsoft CLR)
    br
    -var Node_url="https://en.wikipedia.org/wiki/Node.js"
    a(href=Node_url target="_blank")  - Node.js
    |   (open source, cross-platform runtime environment for javascript, from Node.js Foundation)
    br
    h4 Browser side program:
    | Browser software is scripted into the web pages (script tags in html-files) and is downloaded on
    | demand from the server, when the user browses to the page.
    | Modern browsers (2015) use HTML, CSS and Javascript with versions 5, 3 and 1.8.5 respectively.
    | For safety reasons, the script on the browser as downloaded from the internet, cannot directly
    | access the client's local file system or activate any local programs on the user's equipment.
    | However, local files can be accessed and written after events, where the user by mouse click or keyboard actions
    | first authorises those operations, as is the common practice also with software updates offered through the internet.
    | These HTML5 File Api features and the data safety issues in general are among the
    b   flaws and downsides
    |   in web browser based programs:
    i     Files should be downloaded only through https and pages browsed merely on safe servers
      | and sites with safety certificates.
    br
    | Since the software is not saved locally, a browser based program is useful only during
    | access to internet, and a slow connection may cause response time problems.
    h3(style="color:green") Configuration in this site
    | All the applied open source components and MIT licenced software packages are listed under the
    -var credits_url="/contrbs"
    a(href=credits_url)   'Credits and Acknowledgements'
    |     menu item of this site.
    br
    br
    | For this particular web site, Node.js was the natural choice for the server side framework,
    | enabling javascript coding on both sides. Though Node.js is rather recent, it already
    | serves behind numerous web pages from many front line companies (
    i Microsoft, Yahoo!, LinkedIn, eBay, Dow Jones, Cloud9, The New York Times etc.
    | ) and it is also supported by most web hosting providers.
    br
    br
    | On this particular web site, in addition to web page storage and delivery, server software
    | is needed for:
    br
    b   user signup and login authentication:
    br
    -var Mongo_url="https://en.wikipedia.org/wiki/MongoDB"
    a(href=Mongo_url target="_blank")  - database management
    |   (
    i i.e. to store and acquire data:
    |)
    br
    | - user information (
    i username, password, email address, expiration date
    |)
    br
    | - user data files, storage and delivery
    br
    | - user messages and comments with moderation
    h3(style="color:green") Conclusions:
    | It turned out that Node.js runtime fits nicely to applications,
    | where major part of data processing is performed locally in the browser on the client's pc.
    | Network speed didn't cause any issues on the available, low speed (<10Mbit/s) connection.
    br
    | Coding in javascript is fast and easy enough, with a vast number of MIT licensed widgets and components
    | downloadable directly from the web. A major difference to 'traditional programming work' is the frequent
    | use of
    -var cb_url="https://en.wikipedia.org/wiki/Callback_(computer_programming)"
    a(href=cb_url target="_blank")  callback structures
    |     , which are necessary to maintain user interface responsiveness during data
    | requests from the server. The software on the browser (and the Node.js server) runs in a single thread, but the
    -var async_url="http://code.tutsplus.com/tutorials/event-based-programming-what-async-has-over-sync--net-30027"
    a(href=async_url target="_blank")  asynchronous
    |     nature of the callback loops comes with increased coding and debugging difficulties.
    br
    | Practically all modern computers are equipped with internet access. Admitting the already named conceptual benefits
    | it is very obvious that 'browser based software' will become more and more frequent, and decrease the
    | the number of traditional, locally installed programs.
    br
    b(style="color:green") As a final and convincing example
    |   you might consider software development environments, that earlier were among the heaviest
    | locally assembled software products, but now are directly available on the web browser with minimal local installations.
    | (see for example:
    -var Cloud9_url="https://c9.io/"
    a(href=Cloud9_url target="_blank")  - Cloud9 development environment in the cloud
    |   )
